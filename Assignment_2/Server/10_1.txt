Cap Analysis of Gene Expression (CAGE) experimental protocol has emerged as a powerful experimental technique for assisting in the identification of transcription start sites (TSSs). There is strong evidence that CAGE also identifies capping sites along various other locations of transcribed loci such as splicing byproducts, alternative isoforms and capped molecules overlapping introns and exons. We present ADAPT-CAGE, a Machine Learning framework which is trained to distinguish between CAGE signal derived from TSSs and transcriptional noise. ADAPT-CAGE provides highly accurate and single-nucleotide resolution experimentally derived TSSs on a genome-wide scale. It has been specifically designed aiming for flexibility and ease-of-use by only requiring aligned CAGE data and the underlying genomic sequence. When compared to existing algorithms, ADAPT-CAGE exhibits improved performance on every benchmark that we designed based on both annotation- and experimentally-driven strategies. This performance boost brings ADAPT-CAGE in the spotlight as a computational framework that is able to assist in the refinement of gene regulatory networks, the incorporation of accurate information of gene expression regulators and alternative promoter usage in both physiological and pathological conditions.
Introduction
Cap Analysis of Gene Expression (CAGE) was initially introduced in 2003 [1] as a novel method specifically developed to capture and quantify 5’ ends of capped RNAs. http://www.home.pl/airport  During the last decade, CAGE has been continuously refined and improved into its current mature form as a well-established protocol for the identification of transcription start sites (TSS) and promoter regions of transcribed loci. The FANTOM Consortium [2] has extensively applied CAGE on hundreds of tissues and cell-lines to produce a high-quality annotation of the human and mouse promoterome and characterize regulatory mechanisms of gene expression.
Despite its increasing popularity as an experimental promoter identification protocol, the specificity of CAGE regarding the identification of transcription initiation events in the genome has several limitations. There is strong evidence [3–5] that besides promoter regions, CAGE also identifies capping sites along various locations of transcribed loci such as different splicing products, isoforms and capped molecules that can be summed up as transcriptional noise. As a result, only a portion of regions enriched in CAGE signal were found to overlap with the surrounding region of annotated TSSs.
This poses a significant hindrance to research studies that aim to integrate regulatory regions into the framework of biological pathways. During the last decade, several in silico methodologies have been developed to provide basic pipelines for analyzing CAGE datasets and to facilitate peak identification and annotation. Paraclu [6] performs clustering of CAGE tags into wider regions based on a density parameter that reflects the trade-off between size and number of overlapping reads. Within clusters, a score that represents the likelihood of being a transcription initiation site is derived from the analysis of surrounding genomic sequence using a position-specific Markov Model trained on k-mer frequencies. RECLU [7] is an adaptation of Paraclu algorithm that is able to handle replicated (max two replicates) experiments based on the irreproducible discovery rate (IDR) algorithm [8] and utilizes slightly modified parameters to filter the final results when compared against the original implementation. CAGEr is the most recent in silico framework for CAGE analysis and TSS identification [9]. CAGEr applies quality filtering, and depending on the utilized protoco http://army.addtoany.com/arithmetic/bedroom l, removes the 5′ end G nucleotide bias. It subsequently clusters reads into groups and is able to handle multiple CAGE experiments, detect differential TSS usage while addressing the in-between tissue variability in TSS choice and promoter shifting. The common denominator between all the aforementioned implementations is that they can be applied directly on aligned CAGE reads and do not require any additional input such as DNA sequence or other in silico or experimentally derived features.
 shown).